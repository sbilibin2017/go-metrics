// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/tmp2/go-metrics/internal/usecases/metric_update_body.go

// Package usecases is a generated GoMock package.
package usecases

import (
	context "context"
	domain "go-metrics/internal/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMetricUpdateBodyService is a mock of MetricUpdateBodyService interface.
type MockMetricUpdateBodyService struct {
	ctrl     *gomock.Controller
	recorder *MockMetricUpdateBodyServiceMockRecorder
}

// MockMetricUpdateBodyServiceMockRecorder is the mock recorder for MockMetricUpdateBodyService.
type MockMetricUpdateBodyServiceMockRecorder struct {
	mock *MockMetricUpdateBodyService
}

// NewMockMetricUpdateBodyService creates a new mock instance.
func NewMockMetricUpdateBodyService(ctrl *gomock.Controller) *MockMetricUpdateBodyService {
	mock := &MockMetricUpdateBodyService{ctrl: ctrl}
	mock.recorder = &MockMetricUpdateBodyServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricUpdateBodyService) EXPECT() *MockMetricUpdateBodyServiceMockRecorder {
	return m.recorder
}

// Update mocks base method.
func (m *MockMetricUpdateBodyService) Update(ctx context.Context, metrics []*domain.Metric) ([]*domain.Metric, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, metrics)
	ret0, _ := ret[0].([]*domain.Metric)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockMetricUpdateBodyServiceMockRecorder) Update(ctx, metrics interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockMetricUpdateBodyService)(nil).Update), ctx, metrics)
}
